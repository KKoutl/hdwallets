name: Tests

on:
  push:
    branches: [ master ]
    tags: [ '[0-9]+.[0-9]+.[0-9]+*' ]
  pull_request:
    branches: [ master ]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: ['3.7', '3.8', '3.9', '3.10-dev']
    continue-on-error: ${{ matrix.python-version == '3.10-dev' }}

    steps:
    - uses: actions/checkout@v2
    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v2
      with:
        python-version: ${{ matrix.python-version }}
    - name: Installation (deps and package)
      run: |
        pip install "poetry==1.1.8"
        poetry config virtualenvs.create false
        poetry install --no-interaction --no-ansi
    - name: Linters
      if: matrix.python-version == '3.7'
      run: |
        flake8 .
        mypy .
        isort --check-only .
        black --check .
        docformatter --recursive --check hdwallets/ tests/
    - name: Test with pytest
      run: |
        pytest --cov
    - name: Report coverage
      if: matrix.python-version == '3.7'
      uses: codecov/codecov-action@v1

  pypi-publish:
    # Only publish if all other jobs succeed
    needs: [ build ]
    if: github.event_name == 'push' && startsWith(github.event.ref, 'refs/tags')
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-python@v2
      with:
        python-version: '3.9'
    - name: Install build and publish tools
      run: |
        pip install build twine
    - name: Build and check
      run: |
        rm -rf dist/ && python -m build
        twine check dist/*
    - name: Publish
      run: |
        twine upload dist/*
      env:
        TWINE_USERNAME: __token__
        TWINE_PASSWORD: ${{ secrets.PYPI_TOKEN }}
